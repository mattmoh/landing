---
import { render, getCollection } from 'astro:content';

import BaseLayout from '../layouts/BaseLayout.astro';

import ContactCTA from '../components/ContactCTA.astro';
import Hero from '../components/Hero.astro';
import Resume from '../components/Resume.astro';

function calculateMonths(startDate, endDate) {
	const start = new Date(startDate);
	const end = endDate ? new Date(endDate) : new Date();
	const months = (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth());
	return endDate ? months : `${months}+`;
}

const projects = await getCollection('work');
projects.sort((a, b) => +b.data.startDate - +a.data.startDate);
---

<BaseLayout
	title="matt moh | my work"
	description="Learn about matt moh's most recent projects"
>
	<div class="stack gap-20">
		<main class="wrapper stack gap-8">
			<Hero
				title="My Work"
				tagline="See my most recent projects below to get an idea of my past experience."
				align="start"
			/>
			<Resume />

			<ul class="projects">
				{
					projects.map((project) => (
						<a href={`/work/${project.id}`} class="project">
							<div class="version_wrapper">
								<h2 class="project_title">{project.data.title}</h2>
								<span class="date">
									{calculateMonths(project.data.startDate, project.data.endDate)} months
								</span>
							</div>
							<div class="project_info">
								<div class="content">
									{render(project).then(({ Content }) => (
										<Content />
									))}
								</div>
							</div>
						 </a>
					))
				}
			</ul>
		</main>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	.projects {
		list-style: none;
		padding: 0;
		display: grid;
		grid-template-columns: 1fr;
		gap: 3.5rem;
	}

	.project {
		display: flex;
		flex-direction: column;
		border: 1px solid var(--gray-800);
		border-radius: 12px;
		padding: 1.5rem;
		text-decoration: none;
		color: inherit;
	}

	hr {
		margin: 1em 0;
		border: 0;
		border-bottom: none;
	}

	.content {
		ol,
		ul {
			padding-left: 2em;
			margin-bottom: 1em;
		}

		ul {
			list-style: none;

			li {
				position: relative;
				margin-bottom: 0.75em;

				&:before {
					content: '';
					display: block;
					position: absolute;
					left: -1em;
					top: 0.63em;
					width: 8px;
					height: 8px;
					background: var(--gradient-accent);
					border-radius: 99px;
				}
			}
		}
		h2, h3, h4, h5, h6 {
			padding-top: 1rem;
		}

		h2:first-of-type, h3:first-of-type, h4:first-of-type, h5:first-of-type, h6:first-of-type {
			padding-top: 0;
		}
	}

	.version_wrapper {
		display: flex;
		flex-direction: row;
		align-items: flex-start;
		justify-content: space-between;
		gap: 1rem;
		margin-bottom: 0.5rem;
	}

	@media (min-width: 50em) {
		.version_wrapper {
			top: 0;
		}
	}

	@media (max-width: 50em) {
		.version_wrapper {
			position: static;
		}
	}

	.date {
		font-size: var(--text-xl);
		color: var(--gray-0);
		font-family: 'Source Code Pro', monospace;
		align-self: flex-end;
	}

	.project_title {
		text-decoration: underline;
		text-decoration-color: var(--accent-regular);
	}

	.project_info {
		flex-grow: 1;
		position: relative;
		top: 0;
		padding-left: 1rem;
	}

	@media (max-width: 50em) {
		.project_info {
			padding-left: 0;
		}
	}

	.content {
		margin: 0;
		img {
			max-width: 100%;
			height: auto;
			border-radius: 12px;
			border: 1px solid var(--gray-200);
		}
	}
</style>